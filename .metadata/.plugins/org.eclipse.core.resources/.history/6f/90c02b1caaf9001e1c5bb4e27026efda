public class Solution {

	public static void main(String[] args) {
		int[][] a = { { 5, 1, 5 }, { 3, 2, 7 }, { 4, 2, 7 }, { 1, 1, 1 } };
		int[] b = { 30, 20, 20, 5 };
		int[][][] c = { { { 2, 10 }, { 9, 15 }, { 10, 5 }, { 11, 5 } }, { { 1, 15 }, { 5, 16 }, { 8, 6 } },
				{ { 1, 15 }, { 5, 16 }, { 8, 6 } }, { { 1, 2 }, { 3, 2 } } };

		for (int i = 0; i < b.length; i++) {
			System.out.println(solution(a[i], b[i], c[i]));
			System.out.println();
		}
	}

	public static int solution(int[] bandage, int health, int[][] attacks) {
		int lastAttack = attacks[attacks.length - 1][0];
		int[] attackTime = new int[lastAttack + 1];
		int continuousS = 0;
		int answer = health;

		for (int i = 0; i < attacks.length; i++)
			attackTime[attacks[i][0]] = attacks[i][1];

		/************************************************************
		 * attacks : [[2, 10], [9, 15], [10, 5], [11, 5]]
		 * attackTime : [0, 0, 10, 0, 0, 0, 0, 0, 0, 15, 5, 5]
		 ************************************************************/

		for (int i = 1; i <= lastAttack; i++) {
			if (attackTime[i] != 0) {
				/* 몬스터의 공격을 받으면 정해진 피해량만큼 현재 체력이 줄어듦 */
				answer -= attackTime[i];

				/* 만약 몬스터의 공격을 받고 캐릭터의 체력이 0 이하가 되어 죽는다면 -1을 return */
				if (answer <= 0)
					return -1;

				continuousS = 0;
				continue;
			}

			answer = answer + bandage[1] > health ? health : answer + bandage[1];
			continuousS++;

			if (continuousS == bandage[0]) {
				answer = answer + bandage[2] > health ? health : answer + bandage[2];
				continuousS = 0;
			}
		}

		return answer <= 0 ? -1 : answer;
	}

}
